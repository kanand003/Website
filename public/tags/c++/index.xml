<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on Anand Kumar</title>
    <link>http://localhost:1313/Website/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on Anand Kumar</description>
    <generator>Hugo 0.125.2</generator>
    <language>en</language>
    <lastBuildDate>Mon, 13 Jan 2025 22:54:51 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/Website/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simple Entity Component System Implementation in C&#43;&#43;</title>
      <link>http://localhost:1313/Website/post/ecs/</link>
      <pubDate>Mon, 13 Jan 2025 22:54:51 +0530</pubDate>
      <guid>http://localhost:1313/Website/post/ecs/</guid>
      <description>Entity Component System (ECS) is a software architectural pattern commonly used in game development that follows composition over inheritance. In this post, we&amp;rsquo;ll implement a simple but functional ECS in C++.&#xA;What is ECS? ECS consists of three main parts:&#xA;Entities: Simple IDs that serve as containers for components Components: Pure data structures that hold state Systems: Logic that operates on entities with specific components Basic Implementation Let&amp;rsquo;s start with a simple implementation that demonstrates the core concepts.</description>
    </item>
  </channel>
</rss>
